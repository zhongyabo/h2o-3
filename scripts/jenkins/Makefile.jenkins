.NOTPARALLEL: all
SHELL:=/bin/bash
THIS_FILE := $(lastword $(MAKEFILE_LIST))
JENKINS_MAKEFILE_PATH := scripts/jenkins/Makefile.jenkins

build-h2o-3:
	@echo "+--Building H2O-3--+"
	@echo
	@echo "+--Cleaning--+"
	./gradlew clean $$ADDITIONAL_GRADLE_OPTS
	@echo
	@echo "+--Building--+"
	./gradlew build -x test $$ADDITIONAL_GRADLE_OPTS
	@echo "+--Git Diff Check--+"
	if [[ $$(git diff 2>&1) ]]; then \
		echo "Non-zero git diff or git error after running gradlew build:"; \
		git diff; \
		exit 1; \
	fi
	@echo "+--Gradle Check--+"
	./gradlew -PdoCheckStyle check -x test $$ADDITIONAL_GRADLE_OPTS

warmup-caches:
	@$(MAKE) -f $(THIS_FILE) build-h2o-3
	./gradlew cpLibs $$ADDITIONAL_GRADLE_OPTS

compress-huge-logfiles:
	find * -type f -name 'java*.out.txt' -exec gzip {} \;

test-package-py:
	zip -q -r test-package-py.zip h2o-py/tests/ h2o-py/demos/ \
	tests/leakCheckKeywords \
	h2o-docs/src/booklets/v2_2015/source h2o-py/build/dist/*.whl \
	h2o-genmodel/build/libs/h2o-genmodel.jar h2o-assemblies/genmodel/build/libs/genmodel.jar scripts/run.py \
	$(JENKINS_MAKEFILE_PATH) tests/pyunit*List h2o-py/scripts/h2o-py-test-setup.py

test-package-r:
	zip -q -r test-package-r.zip h2o-r h2o-docs/src/booklets/v2_2015/source \
		tests/leakCheckKeywords \
		h2o-assemblies/genmodel/build/libs/genmodel.jar scripts/run.py \
		$(JENKINS_MAKEFILE_PATH) tests/runitSmokeTestList tests/runitAutoMLList \
		scripts/validate_r_cmd_check_output.R scripts/validate_r_cmd_check_output.py h2o-3-DESCRIPTION

init-lookup:
	rm -f h2o-{r,py}/tests/.lookup.txt

lookup-automl-tests: init-lookup
	mkdir -p h2o-{r,py}/tests
	find h2o-r/tests -name '*automl*.R' -exec basename {} \; >>h2o-r/tests/.lookup.txt
	find h2o-py/tests -name '*automl*.py' -exec basename {} \; >>h2o-py/tests/.lookup.txt

lookup-hdfs-tests: init-lookup
	mkdir -p h2o-{r,py}/tests/testdir_hdfs
	find h2o-r/tests/testdir_hdfs -name '*.R' -exec basename {} \; >>h2o-r/tests/.lookup.txt
	find h2o-py/tests/testdir_hdfs -name '*.py' -exec basename {} \; >>h2o-py/tests/.lookup.txt

lookup-demos-tests: init-lookup
	mkdir -p h2o-{r,py}/tests/testdir_demos
	find h2o-r/tests/testdir_demos -name '*.R' -exec basename {} \; >>h2o-r/tests/.lookup.txt
	find h2o-py/tests/testdir_demos -name '*.py' -exec basename {} \; >>h2o-py/tests/.lookup.txt

test-py-smoke:
	export NO_GCE_CHECK=True && cd h2o-py/tests/ && ../../scripts/run.py --wipeall --geterrs --testlist ../../tests/pyunitSmokeTestList --numclouds 6 --jvm.xmx 3g

test-py-init:
	export NO_GCE_CHECK=True && cd h2o-py/tests/testdir_apis/H2O_Init \
	 && python h2o.init_test.py \
	 && python h2o.init_test_HOQE-16.py

test-py-booklets:
	cd h2o-docs/src/booklets/v2_2015/source && ../../../../../scripts/run.py --wipeall --norun
	cd h2o-docs/src/booklets/v2_2015/source && ../../../../../scripts/run.py --numclouds 1 --numnodes 3 --baseport 52524 --jvm.xmx 5g --test pybooklet.deeplearning.vignette.py
	cd h2o-docs/src/booklets/v2_2015/source && ../../../../../scripts/run.py --numclouds 1 --numnodes 3 --baseport 52524 --jvm.xmx 5g --test pybooklet.gbm.vignette.py
	cd h2o-docs/src/booklets/v2_2015/source && ../../../../../scripts/run.py --numclouds 1 --numnodes 3 --baseport 53534 --jvm.xmx 5g --test pybooklet.glm.vignette.py

test-pyunit-small: lookup-hdfs-tests lookup-automl-tests
	export NO_GCE_CHECK=True && cd h2o-py/tests/ && ../../scripts/run.py --wipeall --geterrs --testsize s --numclouds 6 --jvm.xmx 3g --excludelist .lookup.txt

test-pyunit-single-node:
	export NO_GCE_CHECK=True && cd h2o-py/tests/ && ../../scripts/run.py --wipeall --geterrs --testsize s --numclouds 1 --numnodes 1 --jvm.xmx 3g --testlist ../../tests/pyunitSingleNodeList

test-pyunit-xgboost-stress:
	export NO_GCE_CHECK=True && cd h2o-py/tests/ && ../../scripts/run.py --wipeall --geterrs --testsize s --numclouds 1 --numnodes 5 --jvm.xmx 3g --testlist ../../tests/pyunitXGBoostStressTestList

test-pyunit-small-automl: lookup-automl-tests
	export NO_GCE_CHECK=True && cd h2o-py/tests/ && ../../scripts/run.py --wipeall --geterrs --testsize s --numclouds 6 --jvm.xmx 3g --testlist .lookup.txt

test-py-demos:
	export NO_GCE_CHECK=True && cd h2o-py/demos/ && ../../scripts/run.py --wipeall --numclouds 4 --baseport 56789 --jvm.xmx 10g

test-pyunit-medium-large: lookup-hdfs-tests
	export NO_GCE_CHECK=True && cd h2o-py/tests/ && ../../scripts/run.py --wipeall --geterrs --testsize ml --numclouds 1 --numnodes 5 --jvm.xmx 15g --excludelist .lookup.txt

test-py-single-test:
	@echo "test=$$SINGLE_TEST_PATH"
	@echo "numnodes=$$SINGLE_TEST_NUM_NODES"
	@echo "jvm.xmx=$$SINGLE_TEST_XMX"
	export NO_GCE_CHECK=True && cd h2o-py/tests/ && ../../scripts/run.py --wipeall --geterrs --test $$SINGLE_TEST_PATH --numnodes $$SINGLE_TEST_NUM_NODES --jvm.xmx $$SINGLE_TEST_XMX

test-r-smoke:
	export NO_GCE_CHECK=True && cd h2o-r/tests/ && ../../scripts/run.py --wipeall --geterrs --testlist ../../tests/runitSmokeTestList --numclouds 8 --jvm.xmx 3g

test-r-init:
	cd h2o-r/tests/testdir_jira && R -f h2o.init_test_HOQE-16.R

test-r-small: lookup-automl-tests lookup-hdfs-tests lookup-demos-tests
	export NO_GCE_CHECK=True && cd h2o-r/tests/ && ../../scripts/run.py --wipeall --geterrs --testsize s --geterrs --numclouds 4 --jvm.xmx 4g --excludelist .lookup.txt

test-r-small-client-mode: lookup-automl-tests lookup-hdfs-tests
	export NO_GCE_CHECK=True && cd h2o-r/tests/ && ../../scripts/run.py --wipeall --client --testsize s --numclouds 4 --jvm.xmx 4g --excludelist .lookup.txt

test-r-small-client-mode-attack: lookup-automl-tests lookup-hdfs-tests
	export NO_GCE_CHECK=True && cd h2o-r/tests/ && ../../scripts/run.py --wipeall --client --testsize s --numclouds 4 --jvm.opts '-Dsys.ai.h2o.debug.clientDisconnectAttack=true' --jvm.xmx 4g --excludelist .lookup.txt

test-r-small-automl: lookup-automl-tests
	export NO_GCE_CHECK=True && cd h2o-r/tests/ && ../../scripts/run.py --wipeall --testsize s --geterrs --numclouds 4 --jvm.xmx 4g --testlist .lookup.txt

test-r-small-client-mode-automl: lookup-automl-tests
	export NO_GCE_CHECK=True && cd h2o-r/tests/ && ../../scripts/run.py --wipeall --client --testsize s --numclouds 4 --jvm.xmx 4g --testlist .lookup.txt

test-r-medium-large: lookup-hdfs-tests
	export NO_GCE_CHECK=True && cd h2o-r/tests/ && ../../scripts/run.py --wipeall --geterrs --testsize ml --numclouds 2 --numnodes 2 --jvm.xmx 20g --excludelist .lookup.txt

test-r-datatable:
	export NO_GCE_CHECK=True && cd h2o-r/tests/testdir_perf && ../../../scripts/run.py --wipeall --test runit_repeating_merge.R  --numclouds 1 --numnodes 2 --jvm.xmx 20g

test-r-cmd-check:
	cd h2o-r/R/src/contrib && OPENBLAS_MAIN_FREE=1 H2O_R_CMD_CHECK_DOC_EXAMPLES_IP=127.0.0.1 H2O_R_CMD_CHECK_DOC_EXAMPLES_PORT=59999 _R_CHECK_FORCE_SUGGESTS_=FALSE R CMD check --run-dontrun --run-donttest h2o_*.*.*.*.tar.gz
	fuser -k 59999/tcp || /bin/true

test-r-cmd-check-as-cran:
	cd h2o-r/R/src/contrib && OPENBLAS_MAIN_FREE=1 H2O_R_CMD_CHECK_DOC_EXAMPLES_IP=127.0.0.1 H2O_R_CMD_CHECK_DOC_EXAMPLES_PORT=59999 _R_CHECK_FORCE_SUGGESTS_=FALSE R CMD check --as-cran h2o_*.*.*.*.tar.gz
	cd h2o-r/R/src/contrib && OPENBLAS_MAIN_FREE=1 H2O_R_CMD_CHECK_DOC_EXAMPLES_IP=127.0.0.1 H2O_R_CMD_CHECK_DOC_EXAMPLES_PORT=59999 _R_CHECK_FORCE_SUGGESTS_=FALSE [ -f ../../../../scripts/validate_r_cmd_check_output.R ] && Rscript ../../../../scripts/validate_r_cmd_check_output.R
	cd h2o-r/R/src/contrib && OPENBLAS_MAIN_FREE=1 H2O_R_CMD_CHECK_DOC_EXAMPLES_IP=127.0.0.1 H2O_R_CMD_CHECK_DOC_EXAMPLES_PORT=59999 _R_CHECK_FORCE_SUGGESTS_=FALSE python ../../../../scripts/validate_r_cmd_check_output.py || true
	fuser -k 59999/tcp || /bin/true

test-r-booklets:
	cd h2o-docs/src/booklets/v2_2015/source && ../../../../../scripts/run.py --wipeall --norun
	cd h2o-docs/src/booklets/v2_2015/source && ../../../../../scripts/run.py --numclouds 1 --numnodes 3 --jvm.xmx 15g --test rbooklet.deeplearning.vignette.R
	cd h2o-docs/src/booklets/v2_2015/source && ../../../../../scripts/run.py --numclouds 1 --numnodes 3 --jvm.xmx 15g --test rbooklet.gbm.vignette.R
	cd h2o-docs/src/booklets/v2_2015/source && ../../../../../scripts/run.py --numclouds 1 --numnodes 3 --jvm.xmx 15g --test rbooklet.glm.vignette.R
	cd h2o-docs/src/booklets/v2_2015/source && ../../../../../scripts/run.py --numclouds 1 --numnodes 3 --jvm.xmx 15g --test rbooklet.r.vignette.R

test-r-demos-small:
	cd h2o-r/demos && ../../scripts/run.py --wipeall --norun
	cd h2o-r/demos && ../../scripts/run.py --wipeall --testsize s --numclouds 4 --jvm.xmx 2g
	export NO_GCE_CHECK=True && cd h2o-r/h2o-package/demo && ../../../scripts/run.py --wipeall --norun
	export NO_GCE_CHECK=True && cd h2o-r/h2o-package/demo && ../../../scripts/run.py --wipeall --testsize s --numclouds 4 --jvm.xmx 2g

test-r-demos-medium-large:
	export NO_GCE_CHECK=True && cd h2o-r/demos && ../../scripts/run.py --wipeall --norun
	export NO_GCE_CHECK=True && cd h2o-r/demos && ../../scripts/run.py --wipeall --testsize ml --numclouds 1 --numnodes 3 --jvm.xmx 15g

test-r-single-test:
	@echo "test=$$SINGLE_TEST_PATH"
	@echo "numnodes=$$SINGLE_TEST_NUM_NODES"
	@echo "jvm.xmx=$$SINGLE_TEST_XMX"
	export NO_GCE_CHECK=True && cd h2o-r/tests/ && ../../scripts/run.py --wipeall --geterrs --test $$SINGLE_TEST_PATH --numnodes $$SINGLE_TEST_NUM_NODES --jvm.xmx $$SINGLE_TEST_XMX

r-generate-docs-jenkins:
	@$(MAKE) -f $(THIS_FILE) r-generate-docs
	@$(MAKE) -f $(THIS_FILE) pack-r-generated-docs

#######################################
### TARGET USED BY RELEASE PIPELINE ###
#######################################
r-generate-docs:
	cd h2o-r/h2o-package && R -e 'pkgdown::build_site(examples=FALSE)'

pack-r-generated-docs:
	zip r-generated-docs.zip h2o-r/h2o-package/docs/**/*.html

test-package-js:
	zip -q -r test-package-js \
		tests/leakCheckKeywords \
		$(JENKINS_MAKEFILE_PATH) tests/ignoreFlowSmokeTestList scripts/run.py \
		h2o-web

test-flow-headless-smoke:
	./scripts/run.py --wipeall --geterrs --test h2o-web/lib/h2o-flow/build/js/headless-test.js --jvm.xmx 4g --pto 14400 --ptt test-small --excludelist tests/ignoreFlowSmokeTestList

test-flow-headless-small:
	./scripts/run.py --wipeall --geterrs --test h2o-web/lib/h2o-flow/build/js/headless-test.js --jvm.xmx 4g --pto 14400 --ptt test-small

test-flow-headless-medium:
	./scripts/run.py --wipeall --geterrs --test h2o-web/lib/h2o-flow/build/js/headless-test.js --jvm.xmx 20g --pto 14400 --ptt test-medium

test-flow-headless:
	cd h2o-web && ../scripts/run.py --wipeall --geterrs --test lib/h2o-flow/build/js/headless-test.js --jvm.xmx 4g

test-info:
	export NO_GCE_CHECK=True && cd h2o-r/tests/ && ../../scripts/run.py --wipeall --geterrs --test testdir_algos/deeplearning/runit_deeplearning_iris_basic.R --jvm.xmx 4g
	cd h2o-r/tests/results && grep -v INFO java_0_0.out.txt > INFO_file.txt || true
	if [[ $$(wc -c h2o-r/tests/results/INFO_file.txt | awk '{print $$1}') -ne 0 ]]; then \
		echo "There were non-INFO lines in the output."; \
		cat h2o-r/tests/results/INFO_file.txt; \
		exit 1; \
	fi

test-demos:
	cd h2o-py/tests/testdir_demos && python ../../../scripts/run.py --whl ../../../h2o-py/build/dist/h2o-*.whl --wipeall --numclouds 1 --jvm.xmx 5g

test-package-java:
	zip -q -r test-package-java \
		tests/leakCheckKeywords \
		$(JENKINS_MAKEFILE_PATH) \
		gradlew \
		gradle.properties \
		gradle/ \
		buildSrc/ \
		multiNodeUtils.sh \
		h2o-app/ \
		h2o-core/src/ \
		h2o-core/build/resources/ \
		h2o-core/build/classes/java/ \
		h2o-core/build/libs/h2o-core-*.jar \
		h2o-genmodel/src/ \
		h2o-genmodel/build/libs/h2o-genmodel-*.jar \
		h2o-algos/src/ \
		h2o-algos/build/libs/h2o-algos-*.jar \
		h2o-parsers/h2o-avro-parser/src/ \
		h2o-parsers/h2o-avro-parser/build/libs/h2o-avro-parser-*.jar \
		h2o-parsers/h2o-orc-parser/src/ \
		h2o-parsers/h2o-orc-parser/build/libs/h2o-orc-parser-*.jar \
		h2o-parsers/h2o-parquet-parser/src/ \
		h2o-parsers/h2o-parquet-parser/build/libs/h2o-parquet-parser-*.jar \
		h2o-persist-gcs/src/ \
		h2o-persist-gcs/build/libs/h2o-persist-gcs-*.jar \
		h2o-persist-hdfs/src/ \
		h2o-persist-hdfs/build/libs/h2o-persist-hdfs-*.jar \
		h2o-persist-s3/src/ \
		h2o-persist-s3/build/libs/h2o-persist-s3-*.jar \
		h2o-extensions/xgboost/ \
		h2o-genmodel-extensions/ \
		h2o-jaas-pam/build/libs/h2o-jaas-pam-*.jar \
		h2o-scala/src/ \
		h2o-scala/build/h2o-scala_2.*/libs/h2o-scala_2.*.jar \
		h2o-webserver-iface/src/ \
		h2o-webserver-iface/build/libs/h2o-webserver-iface-*.jar \
		h2o-jetty-8/src/ \
		h2o-jetty-8/build/libs/h2o-jetty-8-*.jar \
		h2o-jetty-9/src/ \
		h2o-jetty-9/build/libs/h2o-jetty-9-*.jar \
		scripts/run.py py/ scripts/test-xgb-gpu-smoke.sh \
		sort_crash.csv tests/doOnlyJunitSmokeTestList \
		jacoco/*.jar
	find . -name "*.gradle" | zip -q -r test-package-java \
	    -x h2o-web/* \
	    -x h2o-bindings/* \
	    -@
	find . -name "*test*.sh" | zip -q -r test-package-java -@
	find . -name "*test*.jar" | zip -q -r test-package-java -@

define sed_test_scripts
	find . -name 'test*Node.sh' -type f -exec sed -i 's/cat $$OUTDIR\/out*/echo "###### Printing last 400 lines of logs. Check artifacts for more. ######"; tail -n 400 $$OUTDIR\/out*/g' {} +
endef

test-junit-jenkins:
	$(call sed_test_scripts)
	@$(MAKE) -f $(THIS_FILE) test-junit

test-junit:
	./gradlew test -x :h2o-ext-mojo-pipeline:test -x h2o-automl:test $$ADDITIONAL_GRADLE_OPTS

test-junit-automl-jenkins:
	$(call sed_test_scripts)
	@$(MAKE) -f $(THIS_FILE) test-junit-automl

test-junit-automl:
	./gradlew h2o-automl:test $$ADDITIONAL_GRADLE_OPTS

test-junit-10-jenkins:
	$(call sed_test_scripts)
	@$(MAKE) -f $(THIS_FILE) test-junit-10

test-junit-10:
	./gradlew test -x h2o-scala_2.11:test -x h2o-scala_2.10:test -x :h2o-ext-mojo-pipeline:test -x h2o-automl:test  $$ADDITIONAL_GRADLE_OPTS

test-junit-11-jenkins:
	$(call sed_test_scripts)
	@$(MAKE) -f $(THIS_FILE) test-junit-11

test-junit-11:
	./gradlew test -x h2o-scala_2.11:test -x h2o-scala_2.10:test -x :h2o-ext-mojo-pipeline:test -x h2o-automl:test $$ADDITIONAL_GRADLE_OPTS

test-junit-smoke-jenkins:
	$(call sed_test_scripts)
	@$(MAKE) -f $(THIS_FILE) test-junit-smoke

test-junit-smoke:
	DOONLY=$$(head -n 1 tests/doOnlyJunitSmokeTestList) ./gradlew h2o-core:test h2o-algos:test h2o-scala_2.10:test h2o-scala_2.11:test $$ADDITIONAL_GRADLE_OPTS

test-junit-10-smoke-jenkins:
	$(call sed_test_scripts)
	@$(MAKE) -f $(THIS_FILE) test-junit-10-smoke

test-junit-7-smoke:
	DOONLY=$$(head -n 1 tests/doOnlyJunitSmokeTestList) ./gradlew h2o-core:test h2o-algos:test h2o-scala_2.10:test h2o-scala_2.11:test -x h2o-algos:testMultiNode $$ADDITIONAL_GRADLE_OPTS

test-junit-7-smoke-jenkins:
	$(call sed_test_scripts)
	@$(MAKE) -f $(THIS_FILE) test-junit-7-smoke

test-junit-10-smoke:
	DOONLY=$$(head -n 1 tests/doOnlyJunitSmokeTestList) ./gradlew h2o-core:test h2o-algos:test $$ADDITIONAL_GRADLE_OPTS

test-junit-11-smoke:
	DOONLY=$$(head -n 1 tests/doOnlyJunitSmokeTestList) ./gradlew h2o-core:test h2o-algos:test $$ADDITIONAL_GRADLE_OPTS

test-junit-11-smoke-jenkins:
	$(call sed_test_scripts)
	@$(MAKE) -f $(THIS_FILE) test-junit-11-smoke

test-xgb-smoke-minimal-jenkins:
	$(call sed_test_scripts)
	@$(MAKE) -f $(THIS_FILE) test-xgb-smoke-minimal

test-xgb-smoke-omp-jenkins:
	$(call sed_test_scripts)
	@$(MAKE) -f $(THIS_FILE) test-xgb-smoke-omp

test-xgb-smoke-gpu-jenkins:
	$(call sed_test_scripts)
	@$(MAKE) -f $(THIS_FILE) test-xgb-smoke-gpu

test-xgb-smoke-minimal:
	./gradlew h2o-ext-xgboost:test $$ADDITIONAL_GRADLE_OPTS
	$(call check_xgb_backend,'xgboost4j_minimal')

test-xgb-smoke-omp:
	./gradlew h2o-ext-xgboost:test $$ADDITIONAL_GRADLE_OPTS
	$(call check_xgb_backend,'xgboost4j_\(omp\|gpu\)')

test-xgb-smoke-gpu:
	scripts/test-xgb-gpu-smoke.sh
	$(call check_xgb_backend,'xgboost4j_gpu')

define check_xgb_backend
	@if [ ! "$$(egrep 'Found XGBoost backend with library: $(1)' h2o-extensions/xgboost/sandbox/single/*)" ]; then \
		echo "Cannot find XGBoost backend $(1) in the logs."; \
		echo "Please check logs in h2o-extensions/xgboost/sandbox/single"; \
		exit 1; \
	fi
endef

benchmark:
	Rscript ml-benchmark/h2oR/benchmark.R -d $$DATASETS_PATH -t $$TEST_CASES_PATH -o $$OUTPUT_PREFIX --git-sha $$GIT_SHA --git-date "$$GIT_DATE" --model $$BENCHMARK_MODEL --build-id $$BUILD_ID

test-package-hadoop:
	zip -q -r test-package-hadoop \
		tests/leakCheckKeywords \
		scripts/jenkins/config/ \
		h2o-hadoop-2/tests/python/ h2o-hadoop-2/h2o-*-assembly/build/libs/h2odriver.jar \
		h2o-hadoop-3/tests/python/ h2o-hadoop-3/h2o-*-assembly/build/libs/h2odriver.jar \
		h2o-hadoop-common/tests/python/ \
		h2o-hive/tests/python h2o-hive/tests/R

ifeq($(HIVE_VERSION_MAJOR),3)
test-hadoop-common-smoke-hive:
    echo "Hive version 3 installed, not running Hive tests."
else
test-hadoop-common-smoke-hive:
	cd h2o-hive/tests/python && ../../../scripts/run.py --wipeall --usecloud "https://$$CLOUD_IP:$$CLOUD_PORT" --ldap.username $$LDAP_USERNAME --ldap.password $$LDAP_PASSWORD
	cd h2o-hive/tests/R && ../../../scripts/run.py --wipeall --usecloud "https://$$CLOUD_IP:$$CLOUD_PORT" --ldap.username $$LDAP_USERNAME --ldap.password $$LDAP_PASSWORD
endif

test-hadoop-common-smoke-ldap:
	cd h2o-hadoop-common/tests/python && ../../../scripts/run.py --wipeall --usecloud "https://$$CLOUD_IP:$$CLOUD_PORT" --ldap.username $$LDAP_USERNAME --ldap.password $$LDAP_PASSWORD

test-hadoop-common-smoke-kerb:
	cd h2o-hadoop-common/tests/python && ../../../scripts/run.py --wipeall --usecloud "https://$$CLOUD_IP:$$CLOUD_PORT" --kerb.principal $$KERB_PRINCIPAL

test-hadoop-2-smoke-hdp: test-hadoop-2-smoke-ldap test-hadoop-common-smoke-hive

test-hadoop-2-smoke-ldap: test-hadoop-common-smoke-ldap
	cd h2o-hadoop-2/tests/python && ../../../scripts/run.py --wipeall --usecloud "https://$$CLOUD_IP:$$CLOUD_PORT" --ldap.username $$LDAP_USERNAME --ldap.password $$LDAP_PASSWORD

test-hadoop-3-smoke-hdp: test-hadoop-3-smoke-ldap test-hadoop-common-smoke-hive

test-hadoop-3-smoke-ldap: test-hadoop-common-smoke-ldap
	cd h2o-hadoop-3/tests/python && ../../../scripts/run.py --wipeall --usecloud "https://$$CLOUD_IP:$$CLOUD_PORT" --ldap.username $$LDAP_USERNAME --ldap.password $$LDAP_PASSWORD

test-hadoop-2-smoke-kerb: test-hadoop-common-smoke-kerb
	cd h2o-hadoop-2/tests/python && ../../../scripts/run.py --wipeall --usecloud "https://$$CLOUD_IP:$$CLOUD_PORT" --kerb.principal $$KERB_PRINCIPAL

test-hadoop-3-smoke-kerb: test-hadoop-common-smoke-kerb
	cd h2o-hadoop-3/tests/python && ../../../scripts/run.py --wipeall --usecloud "https://$$CLOUD_IP:$$CLOUD_PORT" --kerb.principal $$KERB_PRINCIPAL

coverage-junit-algos-jenkins:
	$(call sed_test_scripts)
	@$(MAKE) -f $(THIS_FILE) coverage-junit-algos

coverage-junit-algos:
	$(call sed_test_scripts)
	./gradlew h2o-algos:test $$ADDITIONAL_GRADLE_OPTS
	./gradlew jacocoMergeExecs $$ADDITIONAL_GRADLE_OPTS

test-mojo-compatibility:
ifeq ($(wildcard ../mojoland),)
	git clone https://github.com/h2oai/mojoland ../mojoland
endif
	cd ../mojoland && ./gradlew clean
	cd ../mojoland && ./gradlew build
	cd ../mojoland/mojo-py && python in_mojo_veritas.py

check-leaks:
	-grep -H -R --include "*.log" --include "*.out" --include "out.*" --exclude leak-check.out -E "`cat tests/leakCheckKeywords | tr '\n' '|' | sed 's/|\s*$$//'`" 2>&1 > leak-check.out
	@if [ -n "`cat leak-check.out`" ]; then\
		echo "Credentials leaked! Please check $(PWD)/leak-check.out"; \
		exit 1; \
	fi
